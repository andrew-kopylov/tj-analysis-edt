#!/bin/bash

timefilter=""

cat %log-path% |
perl -ne '
s/\xef\xbb\xbf//;
s/\n/<nline>/;
s/\r/<rline>/;
if (/^\d\d:\d\d\.\d+-\d+,Context,/) {
    s/^\d\d:\d\d\.\d+-\d+,Context,.*,Context=/,Context=/;
}
if (/^\d\d:\d\d\.\d+-\d+,/) {
    if ($e) {print "$e\n";}
    $e = $_;
}
else {$e .= $_;}
END {print "$e\n";}
' |
grep -P "$timefilter" |
perl -ne '

# <RES>duration<RES>...
if (! s/(\d\d:\d\d\.\d+)-(\d+),(.*)/<RES>\2<RES>,\1,\3/) {goto EXIT}

# <RES>resource<RES><RES>duration<RES>...
if (! s/(.*),Rows=(\d+)[<,](.*)/<RES>\2<RES>,\1,\3/) {
    s/(.*)/<RES>0<RES>,\1/;
}
if (! s/(.*),RowsAffected=(\d+)[<,](.*)/<RES>\2<RES>,\1,\3/) {
    s/(.*)/<RES>0<RES>,\1/;
}

s/(.*),Context=((["\x27]?).*?\3)[<,](.*)/Context=\2,\1,\4/;
#s/(.*),Usr=(.*?)[<,\$](.*)/Usr=\2,\1,\3/;
#s/(.*),p:processName=(.*?)[<,\$](.*)/p:processName=\2,\1,\3/;

s/<RES>,<RES>/<RES>/g;
s/,<RES>/<RES>/;
s/<RES>,\d\d:\d\d.*//;

#GROUP<RES>resource<RES>durations
print $_;

EXIT:
' |
awk -F'<RES>' '
{
    cnt_total += 1
    cnt[$1]   += 1
    dur_total += $4
    dur[$1]   += $4
    rws_total += $3
    rws[$1]   += $3
    raf_total += $2
    raf[$1]   += $2
}
END {
    printf "100.0=prc, %.0f=dur.s, %.1f=av.dur.ms, %.1f=rows, %.1f=rowsaff, %d=Execs\n",
        dur_total / 1000000, dur_total / 1000 / cnt_total, rws_total, raf_total, cnt_total
    for (g in dur) {
        # Check res value.
        g_dur = dur[g]
        g_cnt = cnt[g]
        if (g_cnt && dur_total); else {continue}
        printf "%.1f=prc, %.1f=dur.s, %.1f=av.dur.ms, %.1f=av.rows, %.1f=av.rowsaff, %d=Execs, %s\n",
            (100 * g_dur / dur_total),
            g_dur / 1000000,
            g_dur / 1000 / g_cnt,
            (rws[g] / g_cnt),
            (raf[g] / g_cnt),
            g_cnt, g
    }
}
' |
sort -rhb | head -10 | 
sed -r '
s/<nline>/\n/g
s/<rline>/\r/g
'