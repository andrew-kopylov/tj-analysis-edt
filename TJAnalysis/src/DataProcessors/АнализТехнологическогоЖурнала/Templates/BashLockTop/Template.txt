timefilter="" # "^5[0-9]:"

cat %log-path% | 
perl -ne '
# Delete BOM
s/\xef\xbb\xbf//;
# Substitute end \n\r
s/\n/<nline>/;
s/\r/<rline>/;

# Context event as part of precedence event. 
if (/^\d\d:\d\d\.\d+-\d+,Context,/) {
    s/^\d\d:\d\d\.\d+-\d+,Context,.*,Context=/,Context=/;
}
# Check start event.
if (/^\d\d:\d\d\.\d+-\d+,/) {
    if ($e) {print "$e\n";}
    $e = $_;
}
else {$e .= $_;}
# Out tail
END {print "$e\n";}
' |
grep -P "$timefilter" | 
grep -v "p:processName=DebugQueryTargets" |
perl -ne '

# <RES>duration<RES>...
if (! s/(^\d\d:\d\d\.\d+)-(\d+),(.*)/<RES>\2<RES>,\1,\3/) {goto EXIT}

# Get context
s/(.*),Context=((["\x27]?).*?\3)[<,](.*)/Context=\2,\1,\4/;

# Get lock regions
s/(.*),Regions=((["\x27]?).*?\3)[<,](.*)/Regions=\2,\1,\4/;

# Try get detalization
s/(.*),Usr=(.*?)[<,\$](.*)/Usr=\2,\1,\3/;
s/(.*),t:applicationName=(.*?)[<,\$](.*)/t:applicationName=\2,\1,\3/;
s/(.*),p:processName=(.*?)[<,\$](.*)/p:processName=\2,\1,\3/;
s/(.*),process=(\w+?)[<,\$](.*)/process=\2,\1,\3/;

# Delete service marks and tail.
s/<RES>,<RES>/<RES>/;
s/,<RES>/<RES>/;
s/<RES>,\d\d:\d\d.*//;

#GROUP<RES>resource<RES>durations
print $_;

EXIT:
' |
awk -F'<RES>' '
{
    # Line data 
    l_grp = $1
    l_dur = $2
	# Counts, Duration, Resources: sum and total.
    cnt_total  += 1
    cnt[l_grp] += 1
    dur_total  += l_dur
    dur[l_grp] += l_dur
}
END {
	# Total
    printf "100.0=prc, %.1f=dur.s, %.1f=av.dur.ms, %d=Execs, %d=groups\n",
    	dur_total / 1000000,
    	dur_total / cnt_total / 1000,
    	cnt_total,
        length(cnt) 
    # Groups 	
    for (g in cnt) {
        # Check res values.
        g_cnt = cnt[g]
        g_dur = dur[g]
        if (g_dur) {} else {g_dur=1}
        if (g_cnt) {} else {countinue}
        printf "%.1f=prc.dur, %.1f=prc.cnt, %.1f=dur.s, %.1f=av.dur.ms, %d=Execs, %s\n",
            (100   * g_dur / dur_total),
            (100   * g_cnt / cnt_total),
            (g_dur / 1000000),
            (g_dur / g_cnt / 1000),
            (g_cnt), g
    }
}
' |
sort -rhb | head -10 | \
sed -r '
s/<nline>/\n/g
s/<rline>/\r/g
'
